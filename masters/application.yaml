apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elastic-masters
  namespace: system
spec:  
  version: 8.5.3  
  nodeSets:
  - name: master-b
    count: 1
    config:
      node.attr.zone: europe-west1-b
      cluster.routing.allocation.awareness.attributes: zone
      node.roles: [ "master" ]              
    podTemplate:
      spec:
        nodeSelector:
          cloud.google.com/gke-nodepool: masters       
        containers:
        - name: elasticsearch
          resources:
            requests:
              memory: 16Gi
              cpu: '8'
            limits:
              memory: 16Gi
              cpu: '8' 
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
  - name: hot-b
    count: 1
    config:
      node.attr.data: hot      
      node.attr.zone: europe-west1-b
      cluster.routing.allocation.awareness.attributes: zone
      node.roles: [ "data_hot", "data_content" ]
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
        storageClassName: hot                    
    podTemplate:
      spec:
        nodeSelector:
          cloud.google.com/gke-nodepool: hot       
        containers:
        - name: elasticsearch
          resources:
            requests:
              memory: 8Gi
              cpu: '3'
            limits:
              memory: 8Gi
              cpu: '3' 
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']          
  - name: warm-b
    count: 1
    config:
      node.attr.data: warm      
      node.attr.zone: europe-west1-b
      cluster.routing.allocation.awareness.attributes: zone
      node.roles: [ "data_warm" ]
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
        storageClassName: warm                    
    podTemplate:
      spec:
        nodeSelector:
          cloud.google.com/gke-nodepool: warm       
        containers:
        - name: elasticsearch
          resources:
            requests:
              memory: 4Gi
              cpu: '3'
            limits:
              memory: 4Gi
              cpu: '3' 
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']          
  - name: cold-b
    count: 1
    config:
      node.attr.data: cold      
      node.attr.zone: europe-west1-b
      cluster.routing.allocation.awareness.attributes: zone
      node.roles: [ "data_cold" ]
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
        storageClassName: cold                    
    podTemplate:
      spec:
        nodeSelector:
          cloud.google.com/gke-nodepool: cold       
        containers:
        - name: elasticsearch
          resources:
            requests:
              memory: 4Gi
              cpu: '3'
            limits:
              memory: 4Gi
              cpu: '3' 
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
  - name: frozen-b
    count: 1
    config:
      node.attr.data: frozen      
      node.attr.zone: europe-west1-b
      cluster.routing.allocation.awareness.attributes: zone
      node.roles: [ "data_frozen" ]
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
        storageClassName: frozen                    
    podTemplate:
      spec:
        nodeSelector:
          cloud.google.com/gke-nodepool: frozen       
        containers:
        - name: elasticsearch
          resources:
            requests:
              memory: 4Gi
              cpu: '3'
            limits:
              memory: 4Gi
              cpu: '3' 
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
  - name: coordinater
    count: 1
    config:
      node.attr.zone: europe-west1-b
      cluster.routing.allocation.awareness.attributes: zone
      node.roles: [ "coordinating", 'ingest' ]               
    podTemplate:
      spec:
        nodeSelector:
          cloud.google.com/gke-nodepool: masters       
        containers:
        - name: coordinater
          resources:
            requests:
              memory: 8Gi
              cpu: '4'
            limits:
              memory: 8Gi
              cpu: '4' 
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
  - name: integrations
    count: 1
    config:
      node.attr.zone: europe-west1-b
      cluster.routing.allocation.awareness.attributes: zone
      node.roles: [ "integrations_server" ]               
    podTemplate:
      spec:
        nodeSelector:
          cloud.google.com/gke-nodepool: masters       
        containers:
        - name: integrations
          resources:
            requests:
              memory: 8Gi
              cpu: '8'
            limits:
              memory: 8Gi
              cpu: '8' 
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
            runAsUser: 0
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
---
apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: fleet-server
  namespace: system
spec:
  version: 8.5.3
  kibanaRef:
    name: kibana
  elasticsearchRefs:
  - name: elasticsearch
  mode: fleet
  fleetServerEnabled: true
  deployment:
    replicas: 1
    podTemplate:
      spec:
        serviceAccountName: elastic-agent
        automountServiceAccountToken: true
        securityContext:
          runAsUser: 0
---
apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: elastic-agent
  namespace: system
spec:
  version: 8.5.3
  kibanaRef:
    name: kibana
  fleetServerRef:
    name: fleet-server
  mode: fleet
  daemonSet:
    podTemplate:
      spec:
        serviceAccountName: elastic-agent
        automountServiceAccountToken: true
        securityContext:
          runAsUser: 0          
