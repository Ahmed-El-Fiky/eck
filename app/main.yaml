---
# Elasticsearch Stateful Deployment
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: elastic-cluster
  namespace: elastic
spec:
  version: 8.16.1
  nodeSets:
    # Master Nodes (3 for HA)
    - name: master-nodes
      count: 3
      config:
        node.roles: ["master"]
        cluster.name: "elastic-cluster"
        cluster.routing.allocation.awareness.attributes: "zone"  # Zone awareness
      podTemplate:
        spec:
          nodeSelector:
            role: master
          initContainers:
            - name: sysctl
              securityContext:
                privileged: true
                runAsUser: 0
              command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
          containers:
            - name: elasticsearch
              resources:
                requests:
                  memory: "4Gi"
                  cpu: "2"
                limits:
                  memory: "4Gi"
                  cpu: "2"
    # Data Nodes (2 StatefulSet for persistence)
    - name: data-nodes
      count: 2
      config:
        node.roles: ["data"]
        cluster.routing.allocation.awareness.attributes: "zone"  # Zone awareness for data nodes
      podTemplate:
        spec:
          nodeSelector:
            role: data
          initContainers:
            - name: sysctl
              securityContext:
                privileged: true
                runAsUser: 0
              command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
          containers:
            - name: elasticsearch
              resources:
                requests:
                  memory: "32Gi"
                  cpu: "8"
                limits:
                  memory: "32Gi"
                  cpu: "8"
      volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data
          spec:
            accessModes: ["ReadWriteOnce"]
            storageClassName: premium-rwo
            resources:
              requests:
                storage: 24Ti

---

# Fleet Server Deployment (2 replicas for HA)
apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: fleet-server
  namespace: elastic
spec:
  version: 8.16.1
  elasticsearchRefs:
    - name: elastic-cluster
  deployment:
    replicas: 2  # High Availability
    podTemplate:
      spec:
        nodeSelector:
          role: shared
        initContainers:
          - name: sysctl
            securityContext:
              privileged: true
              runAsUser: 0
            command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        containers:
          - name: fleet-server
            image: "docker.elastic.co/beats/elastic-agent:8.16.1"
            resources:
              requests:
                memory: "4Gi"
                cpu: "2"
              limits:
                memory: "4Gi"
                cpu: "2"

---

# Elastic Agent Deployment (2 replicas for HA)
apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: elastic-agent
  namespace: elastic
spec:
  version: 8.16.1
  elasticsearchRefs:
    - name: elastic-cluster
  deployment:
    replicas: 2  # High Availability
    podTemplate:
      spec:
        nodeSelector:
          role: shared
        initContainers:
          - name: sysctl
            securityContext:
              privileged: true
              runAsUser: 0
            command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        containers:
          - name: elastic-agent
            image: "docker.elastic.co/beats/elastic-agent:8.16.1"
            resources:
              requests:
                memory: "4Gi"
                cpu: "2"
              limits:
                memory: "4Gi"
                cpu: "2"
